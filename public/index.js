// Generated by purs bundle 0.12.2
var PS = {};
(function(exports) {
    "use strict";

  exports.pureE = function (a) {
    return function () {
      return a;
    };
  };

  exports.bindE = function (a) {
    return function (f) {
      return function () {
        return f(a())();
      };
    };
  };
})(PS["Effect"] = PS["Effect"] || {});
(function(exports) {
    "use strict";

  exports.arrayMap = function (f) {
    return function (arr) {
      var l = arr.length;
      var result = new Array(l);
      for (var i = 0; i < l; i++) {
        result[i] = f(arr[i]);
      }
      return result;
    };
  };
})(PS["Data.Functor"] = PS["Data.Functor"] || {});
(function(exports) {
    "use strict";

  exports.unit = {};
})(PS["Data.Unit"] = PS["Data.Unit"] || {});
(function(exports) {
  // Generated by purs version 0.12.2
  "use strict";
  var $foreign = PS["Data.Unit"];
  var Data_Show = PS["Data.Show"];
  exports["unit"] = $foreign.unit;
})(PS["Data.Unit"] = PS["Data.Unit"] || {});
(function(exports) {
  // Generated by purs version 0.12.2
  "use strict";
  var $foreign = PS["Data.Functor"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Function = PS["Data.Function"];
  var Data_Unit = PS["Data.Unit"];                 
  var Functor = function (map) {
      this.map = map;
  };
  var map = function (dict) {
      return dict.map;
  };                                                                                             
  var functorArray = new Functor($foreign.arrayMap);
  exports["Functor"] = Functor;
  exports["map"] = map;
  exports["functorArray"] = functorArray;
})(PS["Data.Functor"] = PS["Data.Functor"] || {});
(function(exports) {
  // Generated by purs version 0.12.2
  "use strict";
  var $foreign = PS["Control.Apply"];
  var Control_Category = PS["Control.Category"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];                 
  var Apply = function (Functor0, apply) {
      this.Functor0 = Functor0;
      this.apply = apply;
  };                      
  var apply = function (dict) {
      return dict.apply;
  };
  exports["Apply"] = Apply;
  exports["apply"] = apply;
})(PS["Control.Apply"] = PS["Control.Apply"] || {});
(function(exports) {
  // Generated by purs version 0.12.2
  "use strict";
  var Control_Apply = PS["Control.Apply"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Unit = PS["Data.Unit"];                 
  var Applicative = function (Apply0, pure) {
      this.Apply0 = Apply0;
      this.pure = pure;
  };
  var pure = function (dict) {
      return dict.pure;
  };
  var liftA1 = function (dictApplicative) {
      return function (f) {
          return function (a) {
              return Control_Apply.apply(dictApplicative.Apply0())(pure(dictApplicative)(f))(a);
          };
      };
  };
  exports["Applicative"] = Applicative;
  exports["pure"] = pure;
  exports["liftA1"] = liftA1;
})(PS["Control.Applicative"] = PS["Control.Applicative"] || {});
(function(exports) {
  // Generated by purs version 0.12.2
  "use strict";
  var $foreign = PS["Control.Bind"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Category = PS["Control.Category"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Unit = PS["Data.Unit"];                 
  var Bind = function (Apply0, bind) {
      this.Apply0 = Apply0;
      this.bind = bind;
  };                     
  var bind = function (dict) {
      return dict.bind;
  };
  exports["Bind"] = Bind;
  exports["bind"] = bind;
})(PS["Control.Bind"] = PS["Control.Bind"] || {});
(function(exports) {
  // Generated by purs version 0.12.2
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Unit = PS["Data.Unit"];                 
  var Monad = function (Applicative0, Bind1) {
      this.Applicative0 = Applicative0;
      this.Bind1 = Bind1;
  };
  var ap = function (dictMonad) {
      return function (f) {
          return function (a) {
              return Control_Bind.bind(dictMonad.Bind1())(f)(function (v) {
                  return Control_Bind.bind(dictMonad.Bind1())(a)(function (v1) {
                      return Control_Applicative.pure(dictMonad.Applicative0())(v(v1));
                  });
              });
          };
      };
  };
  exports["Monad"] = Monad;
  exports["ap"] = ap;
})(PS["Control.Monad"] = PS["Control.Monad"] || {});
(function(exports) {
  // Generated by purs version 0.12.2
  "use strict";
  var $foreign = PS["Effect"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad = PS["Control.Monad"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Prelude = PS["Prelude"];                 
  var monadEffect = new Control_Monad.Monad(function () {
      return applicativeEffect;
  }, function () {
      return bindEffect;
  });
  var bindEffect = new Control_Bind.Bind(function () {
      return applyEffect;
  }, $foreign.bindE);
  var applyEffect = new Control_Apply.Apply(function () {
      return functorEffect;
  }, Control_Monad.ap(monadEffect));
  var applicativeEffect = new Control_Applicative.Applicative(function () {
      return applyEffect;
  }, $foreign.pureE);
  var functorEffect = new Data_Functor.Functor(Control_Applicative.liftA1(applicativeEffect));
  exports["functorEffect"] = functorEffect;
  exports["applyEffect"] = applyEffect;
  exports["applicativeEffect"] = applicativeEffect;
  exports["bindEffect"] = bindEffect;
  exports["monadEffect"] = monadEffect;
})(PS["Effect"] = PS["Effect"] || {});
(function(exports) {
    "use strict";
  var Effect = PS["Effect"];
  var Prelude = PS["Prelude"];                 
  var TextTag = (function () {
      function TextTag(value0) {
          this.value0 = value0;
      };
      TextTag.create = function (value0) {
          return new TextTag(value0);
      };
      return TextTag;
  })();
  var SpanTag = (function () {
      function SpanTag(value0) {
          this.value0 = value0;
      };
      SpanTag.create = function (value0) {
          return new SpanTag(value0);
      };
      return SpanTag;
  })();
  var DivTag = (function () {
      function DivTag(value0) {
          this.value0 = value0;
      };
      DivTag.create = function (value0) {
          return new DivTag(value0);
      };
      return DivTag;
  })();
  var AnchorTag = (function () {
      function AnchorTag(value0) {
          this.value0 = value0;
      };
      AnchorTag.create = function (value0) {
          return new AnchorTag(value0);
      };
      return AnchorTag;
  })();
  var BoldTag = (function () {
      function BoldTag(value0) {
          this.value0 = value0;
      };
      BoldTag.create = function (value0) {
          return new BoldTag(value0);
      };
      return BoldTag;
  })();
  var ButtonTag = (function () {
      function ButtonTag(value0) {
          this.value0 = value0;
      };
      ButtonTag.create = function (value0) {
          return new ButtonTag(value0);
      };
      return ButtonTag;
  })();
  var LineBreakTag = (function () {
      function LineBreakTag() {

      };
      LineBreakTag.value = new LineBreakTag();
      return LineBreakTag;
  })();
  exports["TextTag"] = TextTag;
  exports["SpanTag"] = SpanTag;
  exports["DivTag"] = DivTag;
  exports["AnchorTag"] = AnchorTag;
  exports["BoldTag"] = BoldTag;
  exports["ButtonTag"] = ButtonTag;
  exports["LineBreakTag"] = LineBreakTag;
})(PS["Component"] = PS["Component"] || {});
(function(exports) {
  // Generated by purs version 0.12.2
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Category = PS["Control.Category"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_FoldableWithIndex = PS["Data.FoldableWithIndex"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_FunctorWithIndex = PS["Data.FunctorWithIndex"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_List = PS["Data.List"];
  var Data_List_Lazy = PS["Data.List.Lazy"];
  var Data_List_Lazy_Types = PS["Data.List.Lazy.Types"];
  var Data_List_Types = PS["Data.List.Types"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Show = PS["Data.Show"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_TraversableWithIndex = PS["Data.TraversableWithIndex"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Unfoldable = PS["Data.Unfoldable"];
  var Partial_Unsafe = PS["Partial.Unsafe"];
  var Prelude = PS["Prelude"];                 
  var Leaf = (function () {
      function Leaf() {

      };
      Leaf.value = new Leaf();
      return Leaf;
  })();
  var empty = Leaf.value;
  exports["empty"] = empty;
})(PS["Data.Map.Internal"] = PS["Data.Map.Internal"] || {});
(function(exports) {
  // Generated by purs version 0.12.2
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Map = PS["Data.Map"];
  var Data_Map_Internal = PS["Data.Map.Internal"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Show = PS["Data.Show"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Unit = PS["Data.Unit"];
  var Effect = PS["Effect"];
  var Effect_Console = PS["Effect.Console"];
  var Partial_Unsafe = PS["Partial.Unsafe"];
  var Prelude = PS["Prelude"];
  var Unsafe_Coerce = PS["Unsafe.Coerce"];
  var Web_DOM_Document = PS["Web.DOM.Document"];
  var Web_DOM_Element = PS["Web.DOM.Element"];
  var Web_DOM_Internal_Types = PS["Web.DOM.Internal.Types"];
  var Web_DOM_Node = PS["Web.DOM.Node"];
  var Web_DOM_NodeList = PS["Web.DOM.NodeList"];
  var Web_DOM_NonElementParentNode = PS["Web.DOM.NonElementParentNode"];
  var Web_DOM_Text = PS["Web.DOM.Text"];
  var Web_Event_Event = PS["Web.Event.Event"];
  var Web_Event_EventTarget = PS["Web.Event.EventTarget"];
  var Web_Event_Internal_Types = PS["Web.Event.Internal.Types"];
  var Web_HTML = PS["Web.HTML"];
  var Web_HTML_HTMLDocument = PS["Web.HTML.HTMLDocument"];
  var Web_HTML_HTMLElement = PS["Web.HTML.HTMLElement"];
  var Web_HTML_Window = PS["Web.HTML.Window"];
  var Element = (function () {
      function Element(value0) {
          this.value0 = value0;
      };
      Element.create = function (value0) {
          return new Element(value0);
      };
      return Element;
  })();                                                                                      
  var nodeToDom = function (rootId) {
      return function (node) {
          return Control_Applicative.pure(Effect.applicativeEffect)(Data_Unit.unit);
      };
  };
  exports["Element"] = Element;
  exports["nodeToDom"] = nodeToDom;
})(PS["HTML"] = PS["HTML"] || {});
(function(exports) {
  // Generated by purs version 0.12.2
  "use strict";
  var Component = PS["Component"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Map = PS["Data.Map"];
  var Data_Map_Internal = PS["Data.Map.Internal"];
  var Effect = PS["Effect"];
  var HTML = PS["HTML"];
  var Prelude = PS["Prelude"];                 
  var App = (function () {
      function App(value0) {
          this.value0 = value0;
      };
      App.create = function (value0) {
          return new App(value0);
      };
      return App;
  })();
  var htmlToNode = function (v) {
      if (v instanceof Component.TextTag) {
          return new HTML.Element({
              props: Data_Map_Internal.empty,
              name: "",
              listeners: [  ],
              children: [  ]
          });
      };
      if (v instanceof Component.SpanTag) {
          return new HTML.Element({
              props: Data_Map_Internal.empty,
              name: "span",
              listeners: [  ],
              children: [ htmlToNode(new Component.TextTag(v.value0)) ]
          });
      };
      if (v instanceof Component.DivTag) {
          return new HTML.Element({
              props: Data_Map_Internal.empty,
              name: "div",
              listeners: [  ],
              children: Data_Functor.map(Data_Functor.functorArray)(htmlToNode)(v.value0)
          });
      };
      if (v instanceof Component.AnchorTag) {
          return new HTML.Element({
              props: Data_Map_Internal.empty,
              name: "a",
              listeners: [  ],
              children: [ htmlToNode(new Component.TextTag(v.value0)) ]
          });
      };
      if (v instanceof Component.BoldTag) {
          return new HTML.Element({
              props: Data_Map_Internal.empty,
              name: "b",
              listeners: [  ],
              children: [ htmlToNode(new Component.TextTag(v.value0)) ]
          });
      };
      if (v instanceof Component.ButtonTag) {
          return new HTML.Element({
              props: Data_Map_Internal.empty,
              name: "button",
              listeners: [  ],
              children: [ htmlToNode(v.value0) ]
          });
      };
      if (v instanceof Component.LineBreakTag) {
          return new HTML.Element({
              props: Data_Map_Internal.empty,
              name: "br",
              listeners: [  ],
              children: [  ]
          });
      };
      throw new Error("Failed pattern match at Main (line 9, column 1 - line 9, column 39): " + [ v.constructor.name ]);
  };
  var appToHtml = function (v) {
      return v.value0.view(v.value0.init);
  };
  var runApp = function (app) {
      return function (model) {
          return (function ($11) {
              return HTML.nodeToDom("main")(htmlToNode($11));
          })(appToHtml(app));
      };
  };
  var main = (function () {
      var component = {
          init: 0,
          view: function (x) {
              return new Component.TextTag("test");
          },
          update: function (model) {
              return function (e) {
                  return model;
              };
          }
      };
      var app = new App(component);
      return runApp(app)(10);
  })();
  exports["htmlToNode"] = htmlToNode;
  exports["appToHtml"] = appToHtml;
  exports["runApp"] = runApp;
  exports["App"] = App;
  exports["main"] = main;
})(PS["Main"] = PS["Main"] || {});
PS["Main"].main();